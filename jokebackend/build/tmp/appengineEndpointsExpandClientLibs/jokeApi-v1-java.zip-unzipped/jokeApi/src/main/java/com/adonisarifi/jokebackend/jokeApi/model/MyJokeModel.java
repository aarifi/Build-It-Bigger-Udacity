/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-02-18 22:11:37 UTC)
 * on 2016-03-25 at 02:36:52 UTC 
 * Modify at your own risk.
 */

package com.adonisarifi.jokebackend.jokeApi.model;

/**
 * Model definition for MyJokeModel.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the jokeApi. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MyJokeModel extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String jokeAuthor;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String jokeDescription;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public MyJokeModel setId(java.lang.Long id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getJokeAuthor() {
    return jokeAuthor;
  }

  /**
   * @param jokeAuthor jokeAuthor or {@code null} for none
   */
  public MyJokeModel setJokeAuthor(java.lang.String jokeAuthor) {
    this.jokeAuthor = jokeAuthor;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getJokeDescription() {
    return jokeDescription;
  }

  /**
   * @param jokeDescription jokeDescription or {@code null} for none
   */
  public MyJokeModel setJokeDescription(java.lang.String jokeDescription) {
    this.jokeDescription = jokeDescription;
    return this;
  }

  @Override
  public MyJokeModel set(String fieldName, Object value) {
    return (MyJokeModel) super.set(fieldName, value);
  }

  @Override
  public MyJokeModel clone() {
    return (MyJokeModel) super.clone();
  }

}
